(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{482:function(t,v,_){"use strict";_.r(v);var a=_(17),e=Object(a.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"数据类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),_("p",[t._v("Java 的数据类型分为两种：")]),t._v(" "),_("ul",[_("li",[t._v("基本数据类型")]),t._v(" "),_("li",[t._v("引用数据类型")])]),t._v(" "),_("h2",{attrs:{id:"基本数据类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型"}},[t._v("#")]),t._v(" 基本数据类型")]),t._v(" "),_("p",[t._v("基本数据类型有八种。4种整型（byte、short、int、long），2种浮点型（float、double），1种字符型（char），1种布尔型（boolean）。")]),t._v(" "),_("h3",{attrs:{id:"byte"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#byte"}},[t._v("#")]),t._v(" byte")]),t._v(" "),_("ul",[_("li",[t._v("8位二进制数")]),t._v(" "),_("li",[t._v("最小值是"),_("code",[t._v("-2^7")]),t._v("，即 "),_("code",[t._v("-128")])]),t._v(" "),_("li",[t._v("最大值是"),_("code",[t._v("2^7-1")]),t._v("，即"),_("code",[t._v("127")])]),t._v(" "),_("li",[t._v("示例："),_("code",[t._v("byte x = 1")])])]),t._v(" "),_("div",{staticClass:"custom-block warning"},[_("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),_("p",[t._v("因为整数有正负之分，因此由最高位二进制数来表达正负（0表示正数，1表示负数），因此整型的取值范围都少一位二进制数。")]),t._v(" "),_("p",[t._v("又因为0的存在，整型的最大值需要减1。")])]),t._v(" "),_("h3",{attrs:{id:"short"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#short"}},[t._v("#")]),t._v(" short")]),t._v(" "),_("ul",[_("li",[t._v("16位二进制数")]),t._v(" "),_("li",[t._v("最小值是"),_("code",[t._v("-2^15")]),t._v("，即 "),_("code",[t._v("-32768")])]),t._v(" "),_("li",[t._v("最大值是"),_("code",[t._v("2^15-1")]),t._v("，即"),_("code",[t._v("32767")])]),t._v(" "),_("li",[t._v("示例："),_("code",[t._v("short x = 2")])])]),t._v(" "),_("h3",{attrs:{id:"int"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#int"}},[t._v("#")]),t._v(" int")]),t._v(" "),_("ul",[_("li",[t._v("32位二进制数")]),t._v(" "),_("li",[t._v("最小值是"),_("code",[t._v("-2^31")]),t._v("，即 "),_("code",[t._v("-2,147,483,648")])]),t._v(" "),_("li",[t._v("最大值是"),_("code",[t._v("2^31-1")]),t._v("，即"),_("code",[t._v("2,147,483,647")])]),t._v(" "),_("li",[t._v("默认的整型类型")]),t._v(" "),_("li",[t._v("示例："),_("code",[t._v("int x = 3")])])]),t._v(" "),_("h3",{attrs:{id:"long"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#long"}},[t._v("#")]),t._v(" long")]),t._v(" "),_("ul",[_("li",[t._v("64位二进制数")]),t._v(" "),_("li",[t._v("最小值是"),_("code",[t._v("-2^63")]),t._v("，即 "),_("code",[t._v("-9,223,372,036,854,775,808")])]),t._v(" "),_("li",[t._v("最大值是"),_("code",[t._v("2^63-1")]),t._v("，即"),_("code",[t._v("9,223,372,036,854,775,807")])]),t._v(" "),_("li",[t._v("示例："),_("code",[t._v("long x = 2,147,483,647L")])])]),t._v(" "),_("div",{staticClass:"custom-block warning"},[_("p",{staticClass:"custom-block-title"},[t._v("为什么long类型的末尾要加L？")]),t._v(" "),_("p",[t._v("因为整型的默认类型是int，如果要定义一个超过int类型范围的值，则需要加上标识L。")]),t._v(" "),_("p",[t._v('"L"理论上不分大小写，但是若写成"l"容易与数字"1"混淆，不容易分辩。所以最好大写。')]),t._v(" "),_("p",[t._v("后面的浮点型同理。")])]),t._v(" "),_("h3",{attrs:{id:"float"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#float"}},[t._v("#")]),t._v(" float")]),t._v(" "),_("ul",[_("li",[t._v("32位二进制数，遵循IEEE754标准")]),t._v(" "),_("li",[t._v("示例："),_("code",[t._v("float x = 3.4F")])])]),t._v(" "),_("h3",{attrs:{id:"double"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#double"}},[t._v("#")]),t._v(" double")]),t._v(" "),_("ul",[_("li",[t._v("64位二进制数，遵循IEEE754标准")]),t._v(" "),_("li",[t._v("默认的浮点型类型")]),t._v(" "),_("li",[t._v("示例："),_("code",[t._v("float x = 3.4")])])]),t._v(" "),_("div",{staticClass:"custom-block danger"},[_("p",{staticClass:"custom-block-title"},[t._v("警告")]),t._v(" "),_("p",[t._v("浮点数不能表示精确值，因为 IEEE 754 标准导致会有精度运算偏差的问题。")])]),t._v(" "),_("h3",{attrs:{id:"char"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#char"}},[t._v("#")]),t._v(" char")]),t._v(" "),_("ul",[_("li",[t._v("16位二进制数，表示 Unicode 编码")]),t._v(" "),_("li",[t._v("示例："),_("code",[t._v("char x = 'A'")])])]),t._v(" "),_("h3",{attrs:{id:"boolean"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#boolean"}},[t._v("#")]),t._v(" boolean")]),t._v(" "),_("ul",[_("li",[t._v("1位二进制数")]),t._v(" "),_("li",[t._v("只有两个值：true 和 false")]),t._v(" "),_("li",[t._v("示例："),_("code",[t._v("boolean x = true")])])]),t._v(" "),_("h2",{attrs:{id:"引用数据类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#引用数据类型"}},[t._v("#")]),t._v(" 引用数据类型")]),t._v(" "),_("p",[t._v("引用数据类型有五种。"),_("RouterLink",{attrs:{to:"/backend/Java/数组.html"}},[t._v("数组 Array")]),t._v("、"),_("RouterLink",{attrs:{to:"/backend/Java/类和对象.html"}},[t._v("类 Class")]),t._v("、"),_("RouterLink",{attrs:{to:"/backend/Java/接口.html"}},[t._v("接口 interface")]),t._v("、"),_("RouterLink",{attrs:{to:"/backend/Java/枚举.html"}},[t._v("枚举 enum")]),t._v("、注解 @interface。")],1),t._v(" "),_("Vssue",{attrs:{options:{labels:[t.$page.relativePath.split("/")[0]]},title:t.$page.relativePath.split("/")[1]}})],1)}),[],!1,null,null,null);v.default=e.exports}}]);