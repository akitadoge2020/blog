(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{507:function(e,o,r){"use strict";r.r(o);var s=r(17),t=Object(s.a)({},(function(){var e=this,o=e.$createElement,r=e._self._c||o;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"docker-compose"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose"}},[e._v("#")]),e._v(" Docker Compose")]),e._v(" "),r("p",[e._v("Docker Compose 是 Docker 官方提供的开源工具，用于快速编排容器和管理。")]),e._v(" "),r("p",[e._v("使用 Docker Compose 本质上就是三个步骤：")]),e._v(" "),r("ol",[r("li",[e._v("配置 Dockerfile 来定义你的项目环境")]),e._v(" "),r("li",[e._v("配置 compose.yml 来定义你的应用服务，让它们能够在一个隔离环境中一起运行")]),e._v(" "),r("li",[e._v("执行 docker-compose up 命令来启动整个应用程序")])]),e._v(" "),r("h2",{attrs:{id:"yml-配置文件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#yml-配置文件"}},[e._v("#")]),e._v(" yml 配置文件")]),e._v(" "),r("h2",{attrs:{id:"docker-compose-和-kubernetes-区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose-和-kubernetes-区别"}},[e._v("#")]),e._v(" Docker Compose 和 Kubernetes 区别")]),e._v(" "),r("p",[e._v("Docker Compose 和 Kubernetes 是两个主要用于容器编排和管理的工具，它们在功能和使用方式上有一些区别：")]),e._v(" "),r("ul",[r("li",[e._v("目标和规模\n"),r("ul",[r("li",[e._v("Docker Compose 主要用于本地开发、测试环境和部署简单的多容器应用，更适合小型项目和个人开发者")]),e._v(" "),r("li",[e._v("Kubernetes 适用于大规模的生产环境和复杂的应用程序")])])]),e._v(" "),r("li",[e._v("多主机支持\n"),r("ul",[r("li",[e._v("Docker Compose 主要用于单主机或者通过 Docker Machine 来管理多个主机")]),e._v(" "),r("li",[e._v("Kubernetes 是可以管理多个主机和多个集群，支持容器的多节点部署")])])]),e._v(" "),r("li",[e._v("自动化\n"),r("ul",[r("li",[e._v("Docker Compose 需要手动执行命令来创建、启动、停止容器，不提供自动伸缩和自动故障恢复")]),e._v(" "),r("li",[e._v("Kubernetes 可以配置自动伸缩策略，根据负载自动扩展或缩减应用程序的副本，并具备自动故障恢复能力")])])])])])}),[],!1,null,null,null);o.default=t.exports}}]);