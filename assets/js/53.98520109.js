(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{519:function(e,t,l){"use strict";l.r(t);var v=l(17),o=Object(v.a)({},(function(){var e=this,t=e.$createElement,l=e._self._c||t;return l("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[l("h1",{attrs:{id:"【es6-】symbol"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#【es6-】symbol"}},[e._v("#")]),e._v(" 【ES6+】Symbol")]),e._v(" "),l("p",[e._v("Symbol 是 ES6 新增的一种基本数据类型，通过使用"),l("code",[e._v("Symbol()")]),e._v("函数来创建。")]),e._v(" "),l("p",[e._v("Symbol 设计的初衷就是为了给对象添加私有属性。")]),e._v(" "),l("h2",{attrs:{id:"特点"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[e._v("#")]),e._v(" 特点")]),e._v(" "),l("ul",[l("li",[e._v("没有字面量")]),e._v(" "),l("li",[e._v("typeof 的类型是"),l("code",[e._v("symbol")])]),e._v(" "),l("li",[e._v("每个 Symbol() 返回的 symbol 都是唯一的")]),e._v(" "),l("li",[e._v("Symbol 不是构造函数，"),l("code",[e._v("new Symbol()")]),e._v("会报错")]),e._v(" "),l("li",[e._v("Symbol 可以作为对象的属性，起到私有属性的作用，这种属性叫做符号属性\n"),l("ul",[l("li",[e._v("符号属性不能被枚举，所以 "),l("code",[e._v("for...in...")]),e._v(" 和 "),l("code",[e._v("Object.keys")]),e._v(" 无法读取符号属性")]),e._v(" "),l("li",[e._v("尽管 "),l("code",[e._v("Object.getOwnPropertyNames")]),e._v(" 可以读取不可枚举的属性，但还是无法读取到符号属性")]),e._v(" "),l("li",[e._v("ES6 新增的 "),l("code",[e._v("Object.getOwnPropertySymbols")]),e._v(" 可以读取")])])]),e._v(" "),l("li",[e._v("Symbol 无法被隐式转换，因此不能用于数学运算、字符串拼接或其他隐式转换场景，但可以显示转换为字符串，使用 String 构造函数转换即可，"),l("code",[e._v("console.log")]),e._v(" 方法之所以能够输出就是因为内部进行了显示转换")])]),e._v(" "),l("Vssue",{attrs:{options:{labels:[e.$page.relativePath.split("/")[0]]},title:e.$page.relativePath.split("/")[1]}})],1)}),[],!1,null,null,null);t.default=o.exports}}]);