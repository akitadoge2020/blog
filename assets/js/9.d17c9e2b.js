(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{477:function(s,a,t){"use strict";t.r(a);var n=t(17),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"java-面向对象的三大特征"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java-面向对象的三大特征"}},[s._v("#")]),s._v(" Java 面向对象的三大特征")]),s._v(" "),t("p",[s._v("Java 面向对象的三大特征：")]),s._v(" "),t("ul",[t("li",[s._v("继承")]),s._v(" "),t("li",[s._v("封装")]),s._v(" "),t("li",[s._v("多态")])]),s._v(" "),t("p",[s._v("也有人说还有第四大特征，"),t("strong",[s._v("抽象")]),s._v("。")]),s._v(" "),t("h2",{attrs:{id:"继承"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#继承"}},[s._v("#")]),s._v(" 继承")]),s._v(" "),t("p",[t("RouterLink",{attrs:{to:"/backend/Java/类和类的关系.html"}},[s._v("继承")]),s._v("也属于类与类之间的关系，它就是子类继承父类的特征（属性）和行为（方法）。")],1),s._v(" "),t("h2",{attrs:{id:"封装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#封装"}},[s._v("#")]),s._v(" 封装")]),s._v(" "),t("p",[s._v("封装就是将数据和对数据的操作过程包装起来，它的目的就是保护数据和操作过程的安全。")]),s._v(" "),t("p",[s._v("方法和类本身就是一个封装的过程。方法封装的是对数据的操作过程，类封装的是属性和方法。")]),s._v(" "),t("h2",{attrs:{id:"多态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多态"}},[s._v("#")]),s._v(" 多态")]),s._v(" "),t("p",[s._v("多态是同一个对象具有多个不同表现形式的能力。")]),s._v(" "),t("p",[s._v("多态的特点：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("有继承关系")])]),s._v(" "),t("li",[t("p",[s._v("父类类型的引用指向子类的对象")]),s._v(" "),t("ul",[t("li",[s._v("向上转型："),t("code",[s._v("Parent p = new Child();")])])])]),s._v(" "),t("li",[t("p",[s._v("子类重写父类的方法")])]),s._v(" "),t("li",[t("p",[s._v("如果子类与父类有重名的属性，调用时获得的是父类的属性")])]),s._v(" "),t("li",[t("p",[s._v("如果想要调用子类独有的方法，需要将类型还原回真实类型")]),s._v(" "),t("ul",[t("li",[s._v("向下转型："),t("code",[s._v("Child c = (Child)p;")])])])])]),s._v(" "),t("h2",{attrs:{id:"抽象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#抽象"}},[s._v("#")]),s._v(" 抽象")]),s._v(" "),t("p",[s._v("abstract 是 Java 中的一个特征修饰符，它可以修饰类本身、类的方法。")]),s._v(" "),t("p",[s._v("如果修饰了类的方法，那么这个类也必须被修饰为抽象类。")]),s._v(" "),t("p",[s._v("抽象类可以包含抽象方法和非抽象方法。")]),s._v(" "),t("p",[s._v("抽象方法是一种没有具体实现的方法，也就是说，抽象方法没有方法体。它的方法体由子类实现。")]),s._v(" "),t("p",[s._v("继承了抽象类的子类，需要将抽象类中的所有抽象方法都实现。")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("abstract")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SuperClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("abstract")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("m")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//抽象方法")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SubClass")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SuperClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//实现抽象方法")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("m")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"m"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);